<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0415.1946                               -->
<workbook original-version='18.1' source-build='2020.2.0 (20202.20.0415.1946)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ListOfOrders+ (P1-AmazingMartEU2)' inline='true' name='federated.1kswkca0orchv81cyk1n71x06few' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='P1-AmazingMartEU2' name='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nitin/Documents/Tableau/Dashboards (Maps and Scatterplots)/P1-AmazingMartEU2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ListOfOrders].[Order ID]' />
              <expression op='[OrderBreakdown].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ListOfOrders].[Order ID]' />
              <expression op='[OrderBreakdown].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
            <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='date' name='Order Date' ordinal='1' />
              <column datatype='string' name='Customer Name' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='string' name='Region' ordinal='5' />
              <column datatype='string' name='Segment' ordinal='6' />
              <column datatype='date' name='Ship Date' ordinal='7' />
              <column datatype='string' name='Ship Mode' ordinal='8' />
              <column datatype='string' name='State' ordinal='9' />
            </columns>
          </relation>
          <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
            <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
              <column datatype='string' name='Order ID' ordinal='0' />
              <column datatype='string' name='Product Name' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='integer' name='Sales' ordinal='3' />
              <column datatype='integer' name='Profit' ordinal='4' />
              <column datatype='integer' name='Quantity' ordinal='5' />
              <column datatype='string' name='Category' ordinal='6' />
              <column datatype='string' name='Sub-Category' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[OrderBreakdown].[Category]' />
          <map key='[City]' value='[ListOfOrders].[City]' />
          <map key='[Country]' value='[ListOfOrders].[Country]' />
          <map key='[Customer Name]' value='[ListOfOrders].[Customer Name]' />
          <map key='[Discount]' value='[OrderBreakdown].[Discount]' />
          <map key='[Order Date]' value='[ListOfOrders].[Order Date]' />
          <map key='[Order ID (OrderBreakdown)]' value='[OrderBreakdown].[Order ID]' />
          <map key='[Order ID]' value='[ListOfOrders].[Order ID]' />
          <map key='[Product Name]' value='[OrderBreakdown].[Product Name]' />
          <map key='[Profit]' value='[OrderBreakdown].[Profit]' />
          <map key='[Quantity]' value='[OrderBreakdown].[Quantity]' />
          <map key='[Region]' value='[ListOfOrders].[Region]' />
          <map key='[Sales]' value='[OrderBreakdown].[Sales]' />
          <map key='[Segment]' value='[ListOfOrders].[Segment]' />
          <map key='[Ship Date]' value='[ListOfOrders].[Ship Date]' />
          <map key='[Ship Mode]' value='[ListOfOrders].[Ship Mode]' />
          <map key='[State]' value='[ListOfOrders].[State]' />
          <map key='[Sub-Category]' value='[OrderBreakdown].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J4118:no:A1:J4118:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H8048:no:A1:H8048:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ListOfOrders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (OrderBreakdown)]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[OrderBreakdown]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Margin' datatype='real' name='[Calculation_731272040687435777]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ListOfOrders' datatype='table' name='[__tableau_internal_object_id__].[ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40]' role='measure' type='quantitative' />
      <group caption='Action (Country,State)' hidden='true' name='[Action (Country,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Geography'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ListOfOrders' id='ListOfOrders_6B2453C9D04F41668D9ABAF60AFD2F40'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[ListOfOrders].[Order ID]' />
                    <expression op='[OrderBreakdown].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='ListOfOrders' table='[ListOfOrders$]' type='table'>
                  <columns gridOrigin='A1:J4118:no:A1:J4118:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='date' name='Order Date' ordinal='1' />
                    <column datatype='string' name='Customer Name' ordinal='2' />
                    <column datatype='string' name='City' ordinal='3' />
                    <column datatype='string' name='Country' ordinal='4' />
                    <column datatype='string' name='Region' ordinal='5' />
                    <column datatype='string' name='Segment' ordinal='6' />
                    <column datatype='date' name='Ship Date' ordinal='7' />
                    <column datatype='string' name='Ship Mode' ordinal='8' />
                    <column datatype='string' name='State' ordinal='9' />
                  </columns>
                </relation>
                <relation connection='excel-direct.17l2ei40n1jkfp1bsc4ft190y91w' name='OrderBreakdown' table='[OrderBreakdown$]' type='table'>
                  <columns gridOrigin='A1:H8048:no:A1:H8048:0' header='yes' outcome='6'>
                    <column datatype='string' name='Order ID' ordinal='0' />
                    <column datatype='string' name='Product Name' ordinal='1' />
                    <column datatype='real' name='Discount' ordinal='2' />
                    <column datatype='integer' name='Sales' ordinal='3' />
                    <column datatype='integer' name='Profit' ordinal='4' />
                    <column datatype='integer' name='Quantity' ordinal='5' />
                    <column datatype='string' name='Category' ordinal='6' />
                    <column datatype='string' name='Sub-Category' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1kswkca0orchv81cyk1n71x06few'>
      <datasources>
        <datasource caption='ListOfOrders+ (P1-AmazingMartEU2)' name='federated.1kswkca0orchv81cyk1n71x06few' />
      </datasources>
      <datasource-dependencies datasource='federated.1kswkca0orchv81cyk1n71x06few'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Europe Profit Margins By State' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Profit Margin Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (P1-AmazingMartEU2)' name='federated.1kswkca0orchv81cyk1n71x06few' />
          </datasources>
          <datasource-dependencies datasource='federated.1kswkca0orchv81cyk1n71x06few'>
            <column caption='Profit Margin' datatype='real' name='[Calculation_731272040687435777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_731272040687435777]' derivation='User' name='[usr:Calculation_731272040687435777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' max='0.5' min='-0.5' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' />
              <lod column='[federated.1kswkca0orchv81cyk1n71x06few].[none:Customer Name:nk]' />
              <lod column='[federated.1kswkca0orchv81cyk1n71x06few].[none:Country:nk]' />
              <lod column='[federated.1kswkca0orchv81cyk1n71x06few].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kswkca0orchv81cyk1n71x06few].[sum:Profit:qk]</rows>
        <cols>[federated.1kswkca0orchv81cyk1n71x06few].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{3A830FD2-A9E1-4668-A07C-220032CB232D}' />
    </worksheet>
    <worksheet name='Europe Profit Margins By State'>
      <table>
        <view>
          <datasources>
            <datasource caption='ListOfOrders+ (P1-AmazingMartEU2)' name='federated.1kswkca0orchv81cyk1n71x06few' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kswkca0orchv81cyk1n71x06few'>
            <column caption='Profit Margin' datatype='real' name='[Calculation_731272040687435777]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_731272040687435777]' derivation='User' name='[usr:Calculation_731272040687435777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' max='0.5' min='-0.5' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' />
              <lod column='[federated.1kswkca0orchv81cyk1n71x06few].[none:Country:nk]' />
              <lod column='[federated.1kswkca0orchv81cyk1n71x06few].[none:State:nk]' />
              <size column='[federated.1kswkca0orchv81cyk1n71x06few].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.7292816638946533' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kswkca0orchv81cyk1n71x06few].[Latitude (generated)]</rows>
        <cols>[federated.1kswkca0orchv81cyk1n71x06few].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CD243B45-84A6-46B3-912E-673B92AD198F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='ListOfOrders+ (P1-AmazingMartEU2)' name='federated.1kswkca0orchv81cyk1n71x06few' />
      </datasources>
      <datasource-dependencies datasource='federated.1kswkca0orchv81cyk1n71x06few'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Europe Profit Margins By State' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Customer Profit Margin Scatter Plot' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='8' mode='slider' name='Europe Profit Margins By State' param='[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]' show-all='false' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='15' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='8' mode='slider' name='Europe Profit Margins By State' param='[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]' show-all='false' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Europe Profit Margins By State' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Customer Profit Margin Scatter Plot' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C598B4E2-56C5-44B1-A09D-7853B0735C0E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Europe Profit Margins By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1kswkca0orchv81cyk1n71x06few].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C161A6B-702D-417A-91B1-9203C4F16398}' />
    </window>
    <window class='worksheet' name='Customer Profit Margin Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[federated.1kswkca0orchv81cyk1n71x06few].[yr:Order Date:ok]' show-all='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1kswkca0orchv81cyk1n71x06few].[usr:Calculation_731272040687435777:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kswkca0orchv81cyk1n71x06few].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A20FF43-670F-4E15-A720-4223F12905AB}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Customer Profit Margin Scatter Plot'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Europe Profit Margins By State'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DBE5765F-C728-4FF9-92E3-7D7B8F47A5C3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Profit Margin Scatter Plot' width='192'>
      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
      xp8BfHY0/x/Lql3Uvi4xPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Europe Profit Margins By State' width='192'>
      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
      bngZRY7NHsMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
